package urender.demo.editor;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JList;

public class AddRemoveItemButtons<E> extends javax.swing.JPanel {

	private JComboBox<IEditHandle<E>> comboBox = null;
	private JList<IEditHandle<E>> list = null;
	private SynchronizedListModel<E, ? extends IEditHandle<E>> listModel = null;
	private Handler<E> handler = null;

	/**
	 * Creates new form AddRemoveItemButtons
	 */
	public AddRemoveItemButtons() {
		initComponents();
	}

	public void bind(JList<IEditHandle<E>> list, SynchronizedListModel<E, ? extends IEditHandle<E>> listModel, Handler<E> handler) {
		this.list = list;
		comboBox = null;
		this.listModel = listModel;
		this.handler = handler;
	}

	public void bind(JComboBox<IEditHandle<E>> comboBox, SynchronizedListModel<E, ? extends IEditHandle<E>> listModel, Handler<E> handler) {
		this.comboBox = comboBox;
		list = null;
		this.listModel = listModel;
		this.handler = handler;
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();

        btnAdd.setForeground(new java.awt.Color(0, 153, 0));
        btnAdd.setText("➕");
        btnAdd.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnRemove.setForeground(new java.awt.Color(204, 0, 0));
        btnRemove.setText("➖");
        btnRemove.setMargin(new java.awt.Insets(2, 5, 2, 5));
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnAdd)
                .addComponent(btnRemove))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
		if (handler != null && listModel != null) {
			List<E> elements = handler.add();
			for (E element : elements) {
				int index = listModel.getSize();
				listModel.addOrReplace(element);
				if (comboBox != null) {
					comboBox.setSelectedIndex(index);
				} else {
					list.setSelectedIndex(index);
				}
			}
		}
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
		if (handler != null && listModel != null) {
			int oldIdx = list == null ? comboBox.getSelectedIndex() : list.getSelectedIndex();
			IEditHandle<E> hnd = list == null ? (IEditHandle<E>) comboBox.getSelectedItem() : list.getSelectedValue();
			if (hnd != null) {
				if (handler.remove(hnd.getContent())) {
					hnd.onRemoved();
					listModel.remove(hnd.getContent());
					if (comboBox != null) {
						comboBox.setSelectedIndex(Math.min(comboBox.getItemCount() - 1, oldIdx));
					} else {
						list.setSelectedIndex(Math.min(listModel.getSize() - 1, oldIdx));
					}
				}
			}
		}
    }//GEN-LAST:event_btnRemoveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnRemove;
    // End of variables declaration//GEN-END:variables

	public static interface Handler<E> {

		public List<E> add();

		public boolean remove(E value);
	}

	public static interface SingleHandler<E> extends Handler<E> {

		public E addSingle();

		@Override
		public default List<E> add() {
			List<E> l = new ArrayList<>();
			E val = addSingle();
			if (val != null) {
				l.add(val);
			}
			return l;
		}
	}
}
